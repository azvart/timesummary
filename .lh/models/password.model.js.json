{
    "sourceFile": "models/password.model.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1642598046069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642598970029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const PasswordSchema = new Schema({\n   email:{\n     type: Schema.Types.ObjectId,\n-    ref: 'users'\n+    ref: 'users',\n     require: false\n   },\n   password: {\n     type: String,\n"
                },
                {
                    "date": 1642600066946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,9 @@\n \n \n const PasswordSchema = new Schema({\n   email:{\n-    type: Schema.Types.ObjectId,\n-    ref: 'users',\n-    require: false\n+    type: String,\n   },\n   password: {\n     type: String,\n   }\n"
                },
                {
                    "date": 1642600761796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n \n \n \n const PasswordSchema = new Schema({\n-  email:{\n+  user_email:{\n     type: String,\n   },\n-  password: {\n+  user_password: {\n     type: String,\n   }\n });\n \n"
                },
                {
                    "date": 1642657138915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,8 @@\n   }\n });\n \n \n+mongoose.models = {};\n \n-const Password = mongoose.models.passwords || mongoose.model('passwords', PasswordSchema);\n+const Password = mongoose.model('passwords', PasswordSchema);\n export default Password;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1642657467847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n \n \n \n const PasswordSchema = new Schema({\n-  user_email:{\n+  userEmail:{\n     type: String,\n   },\n-  user_password: {\n+  userPassword: {\n     type: String,\n   }\n });\n \n"
                },
                {
                    "date": 1642657917550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n \n \n \n const PasswordSchema = new Schema({\n-  userEmail:{\n-    type: String,\n-  },\n   userPassword: {\n     type: String,\n   }\n });\n"
                },
                {
                    "date": 1642658157200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \n const PasswordSchema = new Schema({\n   userPassword: {\n     type: String,\n+    required:true,\n   }\n });\n \n \n"
                },
                {
                    "date": 1643007477056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,8 @@\n   }\n });\n \n \n-mongoose.models = {};\n \n-const Password = mongoose.model('passwords', PasswordSchema);\n+\n+const Password = mongoose.models.passwords ||  mongoose.model('passwords', PasswordSchema);\n export default Password;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643024363213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,8 @@\n   }\n });\n \n \n+mongoose.models = {}\n \n-\n-const Password = mongoose.models.passwords ||  mongoose.model('passwords', PasswordSchema);\n+const Password =  mongoose.model('passwords', PasswordSchema);\n export default Password;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643027823239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,6 +11,6 @@\n \n \n mongoose.models = {}\n \n-const Password =  mongoose.model('passwords', PasswordSchema);\n+const Password = mongoose.models.passwords ||  mongoose.model('passwords', PasswordSchema);\n export default Password;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643287292500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,52 @@\n import mongoose, { Schema } from 'mongoose';\n+import { hash } from 'bcryptjs';\n \n \n-\n const PasswordSchema = new Schema({\n+  userEmail:{\n+    type: String,\n+    required: [true, 'email is valid'],\n+    index:{\n+      unique: true\n+    },\n+    validate:{\n+      validator: function(v) {\n+        return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(v);\n+      },\n\\ No newline at end of file\n+      message: props => `${props.value} is not a valide email`\n+    }\n+  },\n   userPassword: {\n     type: String,\n     required:true,\n+  },\n+  created_at:{\n+    type: Date,\n+    default: Date.now\n   }\n+}, {\n+  versionKey:false,\n+  validateBeforeSave: true\n });\n \n \n-mongoose.models = {}\n \n-const Password = mongoose.models.passwords ||  mongoose.model('passwords', PasswordSchema);\n-export default Password;\n+PasswordSchema.pre('save' , function(next){\n+  const password = this;\n+  if(!password.isModified || !password.isNew){\n+    next();\n+  }else{\n+    hash(password.userPassword, 12, (err, hash) => {\n+      if(err){\n+        console.log('Somthing wrong')\n+        next(err)\n+      }else{\n+        password.userPassword = hash;\n+        next();\n+      }\n+    })\n+  }\n+\n+});\n+\n+export const Password = mongoose.models.passwords ||  mongoose.model('passwords', PasswordSchema);\n"
                }
            ],
            "date": 1642598046069,
            "name": "Commit-0",
            "content": "import mongoose, { Schema } from 'mongoose';\n\n\n\nconst PasswordSchema = new Schema({\n  email:{\n    type: Schema.Types.ObjectId,\n    ref: 'users'\n    require: false\n  },\n  password: {\n    type: String,\n  }\n});\n\n\n\nconst Password = mongoose.models.passwords || mongoose.model('passwords', PasswordSchema);\nexport default Password;"
        }
    ]
}