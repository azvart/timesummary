{
    "sourceFile": "lib/hashcomparePassword.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1642685454308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642685463340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import {compare, hash} from 'bcryptjs';\n-import compare from 'bcryptjs';\n \n \n export async function Compare(password, dbPassword){\n   if(!password || !dbPassword){\n"
                }
            ],
            "date": 1642685454308,
            "name": "Commit-0",
            "content": "import {compare, hash} from 'bcryptjs';\nimport compare from 'bcryptjs';\n\n\nexport async function Compare(password, dbPassword){\n  if(!password || !dbPassword){\n    return 'Please enter the password';\n  }\n  const validPassword = await compare(password,dbPassword);\n  if(!validPassword){\n    return 'Invalid password';\n  }\n  return true;\n};\n\nexport async function Hash(password){\n  const salt = 12;\n  if(!password){\n    return 'Please enter the password';\n  }\n\n  return await hash(password, salt);\n}"
        }
    ]
}